
package Register;

import Login.*;
import Pojo.Student;
import Pojo.User;
import static com.mchange.v2.c3p0.impl.C3P0Defaults.user;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.hibernate.Session;
import org.hibernate.Transaction;


public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Register() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        txtpwd = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        txtbadge = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblpic = new javax.swing.JLabel();
        txtdepartment = new javax.swing.JTextField();
        txtid2 = new javax.swing.JTextField();
        txtid = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 600));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 600));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtpwd.setBorder(null);
        jPanel1.add(txtpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 470, 540, 20));

        txtname.setBorder(null);
        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        jPanel1.add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 540, -1));

        txtbadge.setBorder(null);
        txtbadge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbadgeActionPerformed(evt);
            }
        });
        jPanel1.add(txtbadge, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 540, 20));

        jLabel1.setToolTipText("");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 540, 230, 40));

        lblpic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblpicMouseClicked(evt);
            }
        });
        jPanel1.add(lblpic, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, 220, 50));

        txtdepartment.setBorder(null);
        jPanel1.add(txtdepartment, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 540, 20));

        txtid2.setBorder(null);
        txtid2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtid2ActionPerformed(evt);
            }
        });
        jPanel1.add(txtid2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 540, 20));

        txtid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Register.png"))); // NOI18N
        txtid.setOpaque(true);
        txtid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtidMouseClicked(evt);
            }
        });
        jPanel1.add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 600));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblpicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblpicMouseClicked
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser(); //open image file file
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & PNG Images", "jpg", "png"); //set image type filter
        chooser.setFileFilter(filter); //filter
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) { //if image selected
            File file = chooser.getSelectedFile(); //get selected file
            String strfilepath = file.getAbsolutePath(); //get abs path
//            System.out.println(strfilepath);
            try {
                ImageIcon icon = new ImageIcon(strfilepath); //string image path open as a image icon
                ImageIcon iconresized = new ImageIcon(icon.getImage().getScaledInstance(120, 120, Image.SCALE_DEFAULT)); //resize image icon fit for profile icon label
                lblpic.setText(null); // remove label text
                lblpic.setIcon(iconresized); //set seleted image to profile icon label 

//               String img = this.encodeToString(this.ImageIconToBufferedImage(iconresized),"jpg"); 
//               BufferedImage bimg = this.decodeToImage(img);
//               
//               signup_profile_pic.setIcon(new ImageIcon(bimg));
            } catch (Exception e) {
                System.out.println("Exception occurred : " + e.getMessage());
            }
        }
    }//GEN-LAST:event_lblpicMouseClicked
    public BufferedImage ImageIconToBufferedImage(ImageIcon icon) {
        BufferedImage bi = new BufferedImage(
                icon.getIconWidth(),
                icon.getIconHeight(),
                BufferedImage.TYPE_INT_RGB);
        Graphics g = bi.createGraphics();
        // paint the Icon to the BufferedImage.
        icon.paintIcon(null, g, 0, 0);
        g.dispose();

        return bi;
    }

    public ImageIcon toImageIcon(byte[] img) {
        BufferedImage Imgavatar;
        ImageIcon avatar = null;
        try {
            ByteArrayInputStream bis = new ByteArrayInputStream(img);
            Imgavatar = ImageIO.read(bis);
            if (Imgavatar != null) {
                avatar = new ImageIcon(Imgavatar);
            }
        } catch (IOException ex) {
            System.out.println(ex);
        }
        return avatar;
    }


    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtbadgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbadgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbadgeActionPerformed

    private void txtid2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtid2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtid2ActionPerformed

    private void txtidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtidMouseClicked
        // TODO add your handling code here:
        String id = txtid2.getText();
        String name = txtname.getText();
        int badge = Integer.parseInt(txtbadge.getText());
        String department = txtpwd.getText();
        String pwd=txtpwd.getText();

        byte[] img = null;
        ImageIcon avatar = (ImageIcon) lblpic.getIcon();
        if (avatar != null) {
            try {
                //                img = this.encodeToString(this.ImageIconToBufferedImage(avatar),"jpg");
                BufferedImage bImage = ImageIconToBufferedImage(avatar);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                ImageIO.write(bImage, "jpg", bos);
                img = bos.toByteArray();

            } catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        
        
        //push database 
        Session session = ControllerPck.Controller.getSessionFactory().openSession();
        Transaction transaction = session.beginTransaction();
        
        Student student = new Student(id, name, badge, department, img);
        User user = new User(id,pwd);
        session.save(student);
        session.save(user);
        transaction.commit();
        
    }//GEN-LAST:event_txtidMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        String id = txtid2.getText();
        String name = txtname.getText();
        int badge = Integer.parseInt(txtbadge.getText());
        String department = txtpwd.getText();
        String pwd=txtpwd.getText();

        byte[] img = null;
        ImageIcon avatar = (ImageIcon) lblpic.getIcon();
        if (avatar != null) {
            try {
                //                img = this.encodeToString(this.ImageIconToBufferedImage(avatar),"jpg");
                BufferedImage bImage = ImageIconToBufferedImage(avatar);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                ImageIO.write(bImage, "jpg", bos);
                img = bos.toByteArray();

            } catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        
        
        //push database 
        Session session = ControllerPck.Controller.getSessionFactory().openSession();
        Transaction transaction = session.beginTransaction();
        
        Student student = new Student(id, name, badge, department, img);
        User user = new User(id,pwd);
        session.save(student);
        session.save(user);
        transaction.commit();
        
        JOptionPane.showMessageDialog(null, "New User Registered!!!", "success", JOptionPane.PLAIN_MESSAGE);

        
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblpic;
    private javax.swing.JTextField txtbadge;
    private javax.swing.JTextField txtdepartment;
    private javax.swing.JLabel txtid;
    private javax.swing.JTextField txtid2;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtpwd;
    // End of variables declaration//GEN-END:variables
}
